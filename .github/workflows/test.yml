name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        os: [ubuntu-18.04, ubuntu-16.04, macos-latest]
        include:
          # Include new variables for Codecov
          - os: ubuntu-18.04
            codecov-flag: GHA_Ubuntu1804
          - os: ubuntu-16.04
            codecov-flag: GHA_Ubuntu1604
          - os: macos-latest
            codecov-flag: GHA_macOS
    steps:
      - uses: actions/checkout@v1

      - name: Ubuntu cache
        uses: actions/cache@v1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          path: ~/.cache/pip
          key:
            ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')
            }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: macOS cache
        uses: actions/cache@v1
        if: startsWith(matrix.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key:
            ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')
            }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox

      - name: Tox tests
        shell: bash
        run: |
          tox -e py

      - name: Upload coverage
        if: success()
        run: |
          curl -s https://codecov.io/bash -o codecov.sh
          bash codecov.sh -F ${{ matrix.codecov-flag }}
        env:
          CODECOV_NAME: ${{ matrix.os }} Python ${{ matrix.python-version }}
